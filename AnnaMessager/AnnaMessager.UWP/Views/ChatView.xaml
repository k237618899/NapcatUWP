<views:MvxWindowsPage
    x:Class="AnnaMessager.UWP.Views.ChatView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:views="using:MvvmCross.Uwp.Views"
    xmlns:converters="using:AnnaMessager.UWP.Converters"
    Background="White">
    <views:MvxWindowsPage.Resources>
        <!-- 新增: 圓角發送按鈕樣式 -->
        <Style x:Key="RoundedSendButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="60"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="#7E6CA8"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="20" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <converters:BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:StringNullOrEmptyToVisibilityConverter x:Key="StringNullOrEmptyToVisibilityConverter"/>
        <converters:SegmentIsTextVisibilityConverter x:Key="SegmentIsTextVisibilityConverter"/>
        <converters:SegmentIsImageVisibilityConverter x:Key="SegmentIsImageVisibilityConverter"/>
        <converters:SegmentToTextConverter x:Key="SegmentToTextConverter"/>
        <converters:SegmentToImageUrlConverter x:Key="SegmentToImageUrlConverter"/>
        <converters:TypeEqualsVisibilityConverter x:Key="TypeEqualsVisibilityConverter"/>
        <!-- Image preview inside bubble -->
        <Style x:Key="PreviewImageStyle" TargetType="Image">
            <Setter Property="MaxWidth" Value="220"/>
            <Setter Property="Stretch" Value="UniformToFill"/>
            <Setter Property="Margin" Value="0,4,0,0"/>
        </Style>
        <!-- RichSegments DataTemplates -->
        <DataTemplate x:Key="RichSegmentsTemplateIncoming">
            <StackPanel Margin="0,0,0,2">
                <TextBlock Text="{Binding Converter={StaticResource SegmentToTextConverter}}" TextWrapping="Wrap" Visibility="{Binding Converter={StaticResource SegmentIsTextVisibilityConverter}}" Foreground="#222" FontSize="14"/>
                <Grid Visibility="{Binding Converter={StaticResource TypeEqualsVisibilityConverter}, ConverterParameter=image}" Margin="0,4,0,4">
                    <Image Source="{Binding Converter={StaticResource SegmentToImageUrlConverter}}" Style="{StaticResource PreviewImageStyle}" Tapped="OnAnyTapped"/>
                </Grid>
                <StackPanel Orientation="Horizontal" Visibility="{Binding Converter={StaticResource TypeEqualsVisibilityConverter}, ConverterParameter=record}" Margin="0,4,0,4">
                    <Button Content="▶" Width="36" Tag="record" Click="SegmentPlay_Click"/>
                    <TextBlock Text="語音" VerticalAlignment="Center" Margin="8,0,0,0"/>
                </StackPanel>
                <StackPanel Visibility="{Binding Converter={StaticResource TypeEqualsVisibilityConverter}, ConverterParameter=video}" Margin="0,4,0,4">
                    <Button Content="▶ 播放影片" Tag="video" Click="SegmentPlay_Click"/>
                </StackPanel>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="RichSegmentsTemplateOutgoing">
            <StackPanel Margin="0,0,0,2">
                <TextBlock Text="{Binding Converter={StaticResource SegmentToTextConverter}}" TextWrapping="Wrap" Visibility="{Binding Converter={StaticResource SegmentIsTextVisibilityConverter}}" Foreground="White" FontSize="14"/>
                <Grid Visibility="{Binding Converter={StaticResource TypeEqualsVisibilityConverter}, ConverterParameter=image}" Margin="0,4,0,4">
                    <Image Source="{Binding Converter={StaticResource SegmentToImageUrlConverter}}" Style="{StaticResource PreviewImageStyle}" Tapped="OnAnyTapped"/>
                </Grid>
                <StackPanel Orientation="Horizontal" Visibility="{Binding Converter={StaticResource TypeEqualsVisibilityConverter}, ConverterParameter=record}" Margin="0,4,0,4">
                    <Button Content="▶" Width="36" Tag="record" Click="SegmentPlay_Click"/>
                    <TextBlock Text="語音" VerticalAlignment="Center" Margin="8,0,0,0"/>
                </StackPanel>
                <StackPanel Visibility="{Binding Converter={StaticResource TypeEqualsVisibilityConverter}, ConverterParameter=video}" Margin="0,4,0,4">
                    <Button Content="▶ 播放影片" Tag="video" Click="SegmentPlay_Click"/>
                </StackPanel>
            </StackPanel>
        </DataTemplate>
        <!-- Toolbar icon button style -->
        <Style x:Key="IconBtnStyle" TargetType="Button">
            <Setter Property="Width" Value="36"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="#0A92B6"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="InputBarIconBtnStyle" BasedOn="{StaticResource IconBtnStyle}" TargetType="Button">
            <Setter Property="Foreground" Value="#666"/>
            <Setter Property="Margin" Value="0,0,4,0"/>
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        </Style>
        <!-- Avatar container style -->
        <Style x:Key="AvatarBorderStyle" TargetType="Border">
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="CornerRadius" Value="6"/>
            <Setter Property="Background" Value="#E0E6EE"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
        <!-- Bubbles -->
        <Style x:Key="IncomingBubbleStyle" TargetType="Border">
            <Setter Property="Background" Value="#F2F7FB"/>
            <Setter Property="CornerRadius" Value="16"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
        </Style>
        <Style x:Key="OutgoingBubbleStyle" TargetType="Border">
            <Setter Property="Background" Value="#7E6CA8"/>
            <Setter Property="CornerRadius" Value="16"/>
            <Setter Property="Padding" Value="12,8"/>
        </Style>
        <Style x:Key="OutgoingPreviewBubbleStyle" BasedOn="{StaticResource OutgoingBubbleStyle}" TargetType="Border">
            <Setter Property="Background" Value="#8F7BB8"/>
            <Setter Property="BorderBrush" Value="#D8CFFF"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <!-- Reply preview -->
        <Style x:Key="ReplyPreviewStyle" TargetType="Border">
            <Setter Property="Background" Value="#F0F4F8"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Margin" Value="0,6,0,0"/>
        </Style>
        <Style x:Key="ReplyPreviewOutgoingStyle" BasedOn="{StaticResource ReplyPreviewStyle}" TargetType="Border">
            <Setter Property="Background" Value="#60444444"/>
        </Style>
    </views:MvxWindowsPage.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <!-- Header -->
        <Grid Grid.Row="0" Height="52" Background="#F5FBFF" Padding="8,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button Style="{StaticResource IconBtnStyle}" Click="BackButton_Click">
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE72B;"/>
            </Button>
            <StackPanel Grid.Column="1" Margin="4,0,0,0" VerticalAlignment="Center">
                <TextBlock Text="{Binding ChatTitle}" FontSize="17" FontWeight="SemiBold" Foreground="#0A92B6"/>
                <TextBlock Text="{Binding OnlineStatus}" FontSize="12" Foreground="#4CA4B6"/>
            </StackPanel>
            <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center">
                <Button Style="{StaticResource IconBtnStyle}" Margin="0,0,4,0"><FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE721;"/></Button>
                <Button Style="{StaticResource IconBtnStyle}" Margin="0,0,4,0"><FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE717;"/></Button>
                <Button Style="{StaticResource IconBtnStyle}"><FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE700;"/></Button>
            </StackPanel>
        </Grid>
        <!-- Messages -->
        <ScrollViewer Grid.Row="1" x:Name="MessageScrollViewer" Background="White" Padding="12,8">
            <ItemsControl ItemsSource="{Binding Messages}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="0,6">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" Background="#CCDAF5" CornerRadius="12" Padding="6,2" HorizontalAlignment="Center" Visibility="{Binding ShowTimeStamp, Converter={StaticResource BoolToVisibilityConverter}}">
                                <TextBlock Text="{Binding DisplayTime}" FontSize="11" Foreground="#317089"/>
                            </Border>
                            <Grid Grid.Row="1">
                                <!-- Incoming -->
                                <Grid Visibility="{Binding IsFromSelf, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=inverted}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="48"/>
                                        <ColumnDefinition Width="8"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="36"/>
                                    </Grid.ColumnDefinitions>
                                    <Border Style="{StaticResource AvatarBorderStyle}" Grid.Column="0">
                                        <Grid>
                                            <Image Source="{Binding SenderAvatar}" Stretch="UniformToFill" Visibility="{Binding SenderAvatar, Converter={StaticResource StringNullOrEmptyToVisibilityConverter}}"/>
                                            <TextBlock Text="{Binding SenderInitial}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" Foreground="#555" Visibility="{Binding SenderAvatar, Converter={StaticResource StringNullOrEmptyToVisibilityConverter}, ConverterParameter=inverted}"/>
                                        </Grid>
                                    </Border>
                                    <Border Grid.Column="2" Style="{StaticResource IncomingBubbleStyle}" MaxWidth="640" HorizontalAlignment="Left">
                                        <StackPanel>
                                            <TextBlock Text="{Binding SenderName}" FontSize="11" Foreground="#0A92B6" Margin="0,0,0,4" Visibility="{Binding ShowSenderName, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                            <ItemsControl ItemsSource="{Binding RichSegments}" Visibility="{Binding HasRichSegments, Converter={StaticResource BoolToVisibilityConverter}}" ItemTemplate="{StaticResource RichSegmentsTemplateIncoming}"/>
                                            <TextBlock Text="{Binding Content}" FontSize="14" TextWrapping="Wrap" Foreground="#222" Visibility="{Binding HasRichSegments, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=inverted}"/>
                                            <Image Source="{Binding ImageUrl}" Style="{StaticResource PreviewImageStyle}" Visibility="{Binding ImageUrl, Converter={StaticResource StringNullOrEmptyToVisibilityConverter}}"/>
                                            <Border Style="{StaticResource ReplyPreviewStyle}" Visibility="{Binding HasReply, Converter={StaticResource BoolToVisibilityConverter}}" Tag="{Binding ReplyTargetId}" Tapped="ReplyBorder_Tapped">
                                                <TextBlock Text="{Binding ReplySummary}" FontSize="12" Foreground="#555" TextWrapping="Wrap"/>
                                            </Border>
                                        </StackPanel>
                                    </Border>
                                </Grid>
                                <!-- Outgoing -->
                                <StackPanel HorizontalAlignment="Right" MaxWidth="640" Visibility="{Binding IsFromSelf, Converter={StaticResource BoolToVisibilityConverter}}">
                                    <Grid>
                                        <Border x:Name="OutgoingNormal" Style="{StaticResource OutgoingBubbleStyle}" Visibility="{Binding IsPreview, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=inverted}">
                                            <StackPanel>
                                                <ItemsControl ItemsSource="{Binding RichSegments}" Visibility="{Binding HasRichSegments, Converter={StaticResource BoolToVisibilityConverter}}" ItemTemplate="{StaticResource RichSegmentsTemplateOutgoing}"/>
                                                <TextBlock Text="{Binding Content}" FontSize="14" TextWrapping="Wrap" Foreground="White" Visibility="{Binding HasRichSegments, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=inverted}"/>
                                                <Image Source="{Binding ImageUrl}" Style="{StaticResource PreviewImageStyle}" Visibility="{Binding ImageUrl, Converter={StaticResource StringNullOrEmptyToVisibilityConverter}}"/>
                                                <Border Style="{StaticResource ReplyPreviewOutgoingStyle}" Visibility="{Binding HasReply, Converter={StaticResource BoolToVisibilityConverter}}" Tag="{Binding ReplyTargetId}" Tapped="ReplyBorder_Tapped">
                                                    <TextBlock Text="{Binding ReplySummary}" FontSize="12" Foreground="#DDD" TextWrapping="Wrap"/>
                                                </Border>
                                            </StackPanel>
                                        </Border>
                                        <Border x:Name="OutgoingPreview" Style="{StaticResource OutgoingPreviewBubbleStyle}" Visibility="{Binding IsPreview, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <StackPanel>
                                                <ItemsControl ItemsSource="{Binding RichSegments}" Visibility="{Binding HasRichSegments, Converter={StaticResource BoolToVisibilityConverter}}" ItemTemplate="{StaticResource RichSegmentsTemplateOutgoing}"/>
                                                <TextBlock Text="{Binding Content}" FontSize="14" TextWrapping="Wrap" Foreground="White" Visibility="{Binding HasRichSegments, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=inverted}"/>
                                                <Image Source="{Binding ImageUrl}" Style="{StaticResource PreviewImageStyle}" Visibility="{Binding ImageUrl, Converter={StaticResource StringNullOrEmptyToVisibilityConverter}}"/>
                                                <TextBlock Text="(預載)" FontSize="12" Foreground="#E0D8F8"/>
                                            </StackPanel>
                                        </Border>
                                    </Grid>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
        <!-- Input -->
        <Grid Grid.Row="2" Background="#F5F5F5" Padding="8,0,8,12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <!-- Emoji / Sticker Panel -->
            <Border Grid.Row="0" Background="White" CornerRadius="8" BorderBrush="#DDD" BorderThickness="1" Padding="8" Visibility="Collapsed" x:Name="EmojiPanel">
                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="😀" Margin="4"/>
                        <TextBlock Text="😂" Margin="4"/>
                        <TextBlock Text="👍" Margin="4"/>
                        <TextBlock Text="❤️" Margin="4"/>
                        <TextBlock Text="😎" Margin="4"/>
                        <TextBlock Text="🎉" Margin="4"/>
                    </StackPanel>
                </ScrollViewer>
            </Border>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Grid.Column="0">
                    <Button x:Name="ToggleEmojiBtn" Style="{StaticResource InputBarIconBtnStyle}" Content="&#xE76E;" Click="ToggleEmojiBtn_Click"/>
                    <Button x:Name="ImageButton2" Style="{StaticResource InputBarIconBtnStyle}" Content="&#xE8B8;" Click="AttachmentButton_Click"/>
                    <Button x:Name="VoiceButton" Style="{StaticResource InputBarIconBtnStyle}" Content="&#xE720;" Click="VoiceButton_Click"/>
                    <Button x:Name="VideoButton" Style="{StaticResource InputBarIconBtnStyle}" Content="&#xE714;" Click="VideoButton_Click"/>
                </StackPanel>
                <Border Grid.Column="1" Background="White" CornerRadius="24" BorderBrush="#CCE5F2" BorderThickness="1" Padding="0">
                    <TextBox x:Name="InputBox" Text="{Binding InputMessage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" Background="Transparent" AcceptsReturn="True" TextWrapping="Wrap" Padding="16,10,16,10" FontSize="14" KeyDown="InputBox_KeyDown" PlaceholderText="輸入消息..."/>
                </Border>
                <Button Grid.Column="2" Style="{StaticResource RoundedSendButtonStyle}" Content="發送" HorizontalAlignment="Right" VerticalAlignment="Center" Command="{Binding SendMessageCommand}" IsEnabled="{Binding CanSendMessage}"/>
            </Grid>
        </Grid>
        <!-- Image Preview Layer -->
        <Grid x:Name="ImagePreviewLayer" Background="#88000000" Visibility="Collapsed" Grid.RowSpan="3" Tapped="PreviewLayer_Tapped" KeyDown="PreviewLayer_KeyDown">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Background="#222" Padding="12" CornerRadius="8">
                <StackPanel>
                    <ProgressRing x:Name="PreviewLoading" IsActive="False" Width="64" Height="64" HorizontalAlignment="Center"/>
                    <Image x:Name="PreviewImage" MaxWidth="800" MaxHeight="600" Margin="0,12,0,0" Stretch="Uniform"/>
                    <Button Content="關閉" HorizontalAlignment="Center" Margin="0,12,0,0" Click="ClosePreview_Click"/>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</views:MvxWindowsPage>